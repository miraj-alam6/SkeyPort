.ll 6i
.pl 10.5i
.\"	@(#)key.1	1.1 	 10/28/93
.\"
.lt 6.0i
.TH KEY 1 "28 October 1993 Updated May 4, 2016"
.AT 3
.SH NAME
key \-  Stand\-alone program for computing responses to S/Key challenges.
.SH SYNOPSIS
.B printf("Usage: %s [-h] [-e] [-ddd] [-v] [-l logfile] [-n count] [-p password ] <sequence #>[/] <key> \n", s);
.SH DESCRIPTION
.I key
Takes the optional count  of the number of one time access 
passwords to print
along with a (maximum) sequence number and key as command line args, 
it prompts for the user's secret password (if not used on command line),
and produces both word and hex format responses.
.SH EXAMPLE
.sh
  Usage example:
.sp 0
 	>key \-n 5 99 th91334
.sp 0
 	Enter password: <your secret password is entered here>
.sp 0
 	OMEN US HORN OMIT BACK AHOY
.sp 0
	.... 4 more passwords.
.sp 0
 	>
.LP
.SH OPTIONS
.LP
.B \-h 
This will print a help message that tells you the proper usage

.B \-e
This option will make your password echo back to the user when the user types it.
Without this option the password will be hidden when it is typed.


.B \-ddd
This is the debugging level. One -d will result in level 1 debugging -dd will result
in level 2 and -ddd will result in level 3. Each one adds more information to your debugging.

.B \-v 
This will print the version number of the package


.B \-l <logfile>
The logfile to put your debugging messages into

.B \-n <count>
the number of one time access passwords to print.
The default is one.

.B \-p <password>
user's secret password.
.SH DIAGNOSTICS
.SH BUGS
It is an obvious security hazard to enter your secret password on 
the command line (-p option).
.LP
.SH SEE ALSO
.BR skey(1),
.BR keyinit(1),
.BR keysu(1),
.BR keyinfo(1)
.SH AUTHOR
Phil Karn, Neil M. Haller, John S. Walden, Scott Chasin
